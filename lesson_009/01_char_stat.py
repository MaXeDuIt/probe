# -*- coding: utf-8 -*-

# Подсчитать статистику по буквам в романе Война и Мир.
# Входные параметры: файл для сканирования
# Статистику считать только для букв алфавита (см функцию .isalpha() для строк)
#
# Вывести на консоль упорядоченную статистику в виде
# +---------+----------+
# |  буква  | частота  |
# +---------+----------+
# |    А    |   77777  |
# |    Б    |   55555  |
# |   ...   |   .....  |
# |    a    |   33333  |
# |    б    |   11111  |
# |   ...   |   .....  |
# +---------+----------+
# |  итого  | 9999999  |
# +---------+----------+
#
# Упорядочивание по частоте - по убыванию. Ширину таблицы подберите по своему вкусу
# Требования к коду: он должен быть готовым к расширению функциональности. Делать сразу на классах.
from pprint import pprint

file_name = 'python_snippets\\voyna-i-mir.txt'
stat = {}
sorted_stat = {}
total_char = 0

with open(file_name, 'r', encoding='cp1251') as file:
    for line in file:
        for char in line:
            if char.isalpha():
                total_char += 1
                if char in stat:
                    stat[char] += 1
                else:
                    stat[char] = 1

sorted_keys = sorted(stat, key=stat.get, reverse=True)
for char in sorted_keys:
    sorted_stat[char] = stat[char]

print(f"{'+':-<16}{'+':-<16}{'+'}")
print(f"|{'Буква':^15}|{'Частота':^15}|")
print(f"{'+':-<16}{'+':-<16}{'+'}")

for char, count in sorted_stat.items():
    print(f'|{char:^15}|{count:^15d}|')

print(f"{'+':-<16}{'+':-<16}{'+'}")
print(f"|{'Итого':^15}|{total_char:^15}|")
print(f"{'+':-<16}{'+':-<16}{'+'}")
# После выполнения первого этапа нужно сделать упорядочивание статистики
#  - по частоте по возрастанию
#  - по алфавиту по возрастанию
#  - по алфавиту по убыванию
# Для этого пригодится шаблон проектирование "Шаблонный метод" см https://goo.gl/Vz4828
